jobs:
- job: ${{ parameters.name }}
  timeoutInMinutes: 240
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      stack:
        BUILD: stack
    maxParallel: 1
  variables:
    CACHE_ROOT: "$(Build.SourcesDirectory)/.stack-root"
    CACHE_WORK: "$(Build.SourcesDirectory)/.stack-work"
    CACHE_PROGRAMS: "$(HOME)/.stack/programs/x86_64-linux"
  steps:
  - script: |
      echo "Going to execute script"
      echo $(CACHE_ROOT)
      echo $(CACHE_WORK)
      echo $(CACHE_PROGRAMS)
      echo "Exit script: Going to execute script"
    displayName: 'Installation ${{parameters.os}}'
  - script: |
      export STACK_ROOT="$(Build.SourcesDirectory)"/.stack-root;
      export PATH=$HOME/.local/bin:$PATH
      mkdir -p ~/.local/bin
      curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
    env:
      OS_NAME: ${{ parameters.os }}
    displayName: 'Stack Installation'
  - script: |
      export PATH=$HOME/.local/bin:$PATH
      stack path --programs
      export CACHE_STACK_PROGRAMS=$(stack --no-install-ghc --skip-ghc-check --system-ghc path --programs 2> /dev/null);
      echo "hello"
      echo $CACHE_STACK_PROGRAMS
    displayName: 'Set Cache Variables'
  - script: |
      export PATH=$HOME/.local/bin:$PATH
      export PGM=$(stack path --programs 2> /dev/null)
      echo "Debug started"
      echo $PGM
      echo $CACHE_PROGRAMS
      test $CACHE_PROGRAMS == $PGM
    displayName: 'Test cache paths'
