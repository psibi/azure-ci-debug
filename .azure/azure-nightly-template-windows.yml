jobs:
- job: ${{ parameters.name }}
  timeoutInMinutes: 240
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      stack:
        BUILD: stack
    maxParallel: 1
  variables:
    CACHE_ROOT: "$(Build.SourcesDirectory)/.stack-root"
    CACHE_WORK: "$(Build.SourcesDirectory)/.stack-work"
    CACHE_PROGRAMS: "$HOME/.stack/programs/x86_64-osx"
  steps:
  - bash: |
      export STACK_ROOT="$(Build.SourcesDirectory)"/.stack-root;
      curl -sSkL http://www.stackage.org/stack/windows-x86_64 -o /usr/bin/stack.zip
      unzip -o /usr/bin/stack.zip -d /usr/bin/
    env:
      OS_NAME: ${{ parameters.os }}
    displayName: 'Stack Installation'
  - bash: |
      export PATH=$HOME/.local/bin:$PATH
      stack path --programs
      echo "hello"
      echo $CACHE_STACK_PROGRAMS
    displayName: 'Set Cache Variables'
  - bash: |
      tar --help
      tar --version
      ls /dev/
      ls /dev/null
      tar --force-local -cvf $HOME/jackal.tar -T /dev/null
      tar --force-local -tvf $HOME/jackal.tar
      ls -lh 
      echo "Going to execute script"
      source ./tar.sh
    displayName: Test in Bash
  - powershell: |
      tar --force-local -cvf $HOME/jackal.tar -T /dev/null
      tar --force-local -tvf $HOME/jackal.tar
      tar --help
      tar --version
      tar --force-local -cvf $HOME/jackal.tar -T /dev/null
      tar --force-local -tvf $HOME/jackal.tar
      echo "Going to execute script"
      source ./tar.sh
    displayName: Test in Powershell
  - bash: |
      export PATH=$HOME/.local/bin:$PATH
      export PGM=$(stack path --programs 2> /dev/null)
      echo "Debug started"
      echo $PGM
      echo $CACHE_PROGRAMS
      test $CACHE_PROGRAMS == $PGM
    displayName: 'Test cache paths'
